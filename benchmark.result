rev_rec_nlist // |constraints| = 89
	: 1 + l : &mut (NList[None=0(), Some=7(Box(0, NListNode{value:Lit, next:NList}))], NList[None=-0(), Some=-0(Box(-0, NListNode{value:Lit, next:NList}))]) + r : NList[None=-0(), Some=-0(Box(0, NListNode{value:Lit, next:NList}))] -> NList[None=0(), Some=0(Box(0, NListNode{value:Lit, next:NList}))]
sum_rec_nlist // |constraints| = 26
	: 1 + l : & NList[None=-0(), Some=5(Box(-0, NListNode{value:Lit, next:NList}))] -> Lit
add // |constraints| = 53
	: 1 + t : &mut (Tree[Leaf=0(), Node=10(Lit, Box(Tree), Box(Tree))], Tree[Leaf=0(), Node=-0(Lit, Box(Tree), Box(Tree))]) + x : Lit -> 0, ()
find // |constraints| = 31
	: 1 + t : & Tree[Leaf=-0(), Node=8(Lit, Box(Tree), Box(Tree))] + x : Lit -> Lit
max // |constraints| = 19
	: 1 + t : & Tree[Leaf=-0(), Node=5(Lit, Box(Tree), Box(Tree))] + d : Lit -> Lit
min // |constraints| = 19
	: 1 + t : & Tree[Leaf=-0(), Node=5(Lit, Box(Tree), Box(Tree))] + d : Lit -> Lit
dup // |constraints| = 37
	: 1 + l : List[Nil=0(), Cons=11(Lit, Box(List))] -> List[Nil=-0(), Cons=0(Lit, Box(List))]
dup2 // |constraints| = 81
	: 2 + l : List[Nil=0(), Cons=33(Lit, Box(List))] -> List[Nil=0(), Cons=0(Lit, Box(List))]
end_c // |constraints| = 96
	: 0 + l : &mut (List[Nil=2(), Cons=3(Lit, Box(List))], List[Nil=-0(), Cons=-0(Lit, Box(List))]) + out : &mut (&mut (List[Nil=0(), Cons=0(Lit, Box(List))], List[Nil=0(), Cons=0(Lit, Box(List))]), &mut (List[Nil=-0(), Cons=-0(Lit, Box(List))], List[Nil=0(), Cons=0(Lit, Box(List))])) -> 0, ()
concat // |constraints| = 144
	: 4 + l1 : &mut (List[Nil=2(), Cons=3(Lit, Box(List))], List[Nil=0(), Cons=0(Lit, Box(List))]) + l2 : List[Nil=0(), Cons=0(Lit, Box(List))] -> 0, ()
end_m // |constraints| = 71
	: 0 + l : &mut (List[Nil=1(), Cons=3(Lit, Box(List))], List[Nil=-0(), Cons=-0(Lit, Box(List))]) -> &mut (List[Nil=0(), Cons=0(Lit, Box(List))], List[Nil=0(), Cons=0(Lit, Box(List))])
append // |constraints| = 89
	: 4 + l : &mut (List[Nil=1(), Cons=3(Lit, Box(List))], List[Nil=0(), Cons=0(Lit, Box(List))]) + x : Lit -> 0, ()
rev_loop // |constraints| = 164
	: 0 + l : &mut (List[Nil=1(), Cons=9(Lit, Box(List))], List[Nil=0(), Cons=0(Lit, Box(List))]) -> 0, ()
rev_rec // |constraints| = 57
	: 1 + l : &mut (List[Nil=0(), Cons=9(Lit, Box(List))], List[Nil=-0(), Cons=-0(Lit, Box(List))]) + r : List[Nil=0(), Cons=0(Lit, Box(List))] -> List[Nil=0(), Cons=0(Lit, Box(List))]
rev // |constraints| = 71
	: 4 + l : &mut (List[Nil=0(), Cons=9(Lit, Box(List))], List[Nil=0(), Cons=0(Lit, Box(List))]) -> 0, ()
rev2 // |constraints| = 170
	: 8 + l : &mut (List[Nil=0(), Cons=18(Lit, Box(List))], List[Nil=0(), Cons=0(Lit, Box(List))]) -> 0, ()
nested_m_m // |constraints| = 188
	: 8 + l : &mut (&mut (List[Nil=0(), Cons=18(Lit, Box(List))], List[Nil=0(), Cons=0(Lit, Box(List))]), &mut (List[Nil=-0(), Cons=-0(Lit, Box(List))], List[Nil=-0(), Cons=-0(Lit, Box(List))])) -> 0, ()
reborrow_m // |constraints| = 364
	: 16 + l : &mut (List[Nil=0(), Cons=36(Lit, Box(List))], List[Nil=0(), Cons=0(Lit, Box(List))]) -> 0, ()
record // |constraints| = 216
	: 9 + x : &mut (0, Record{l:List[Nil=0(), Cons=18(Lit, Box(List))], t:Tree[Leaf=0(), Node=5(Lit, Box(Tree), Box(Tree))]}, 0, Record{l:List[Nil=0(), Cons=0(Lit, Box(List))], t:Tree[Leaf=0(), Node=0(Lit, Box(Tree), Box(Tree))]}) -> 0, ()
tuple // |constraints| = 216
	: 9 + x : &mut (0, (List[Nil=0(), Cons=18(Lit, Box(List))], Tree[Leaf=0(), Node=5(Lit, Box(Tree), Box(Tree))]), 0, (List[Nil=0(), Cons=0(Lit, Box(List))], Tree[Leaf=0(), Node=0(Lit, Box(Tree), Box(Tree))])) -> 0, ()
sum_loop // |constraints| = 54
	: 0 + l : & List[Nil=1(), Cons=6(Lit, Box(List))] -> Lit
sum_rec // |constraints| = 19
	: 1 + l : & List[Nil=-0(), Cons=6(Lit, Box(List))] -> Lit
sum2 // |constraints| = 82
	: 1 + l : & List[Nil=1(), Cons=12(Lit, Box(List))] -> Lit
nested_s_s // |constraints| = 88
	: 1 + l : & & List[Nil=1(), Cons=12(Lit, Box(List))] -> 0, ()
nested_m_s // |constraints| = 90
	: 1 + l : &mut (& List[Nil=1(), Cons=12(Lit, Box(List))], & List[Nil=0(), Cons=0(Lit, Box(List))]) -> 0, ()
reborrow_s // |constraints| = 176
	: 2 + l : & List[Nil=2(), Cons=24(Lit, Box(List))] -> 0, ()
main // |constraints| = 2
	: 0 -> 0, ()
